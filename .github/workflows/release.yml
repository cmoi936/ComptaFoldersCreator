name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            name: Windows
            extension: .exe
          - os: linux-x64
            name: Linux
            extension: ""
          - os: osx-x64
            name: macOS
            extension: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build and publish
      run: |
        dotnet publish -c Release -r ${{ matrix.os }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=None -p:DebugSymbols=false -o ./publish/${{ matrix.os }}

    - name: Rename executable
      run: |
        cd ./publish/${{ matrix.os }}
        if [ "${{ matrix.os }}" = "win-x64" ]; then
          mv ComptaFoldersCreator.exe ComptaFoldersCreator-${{ matrix.name }}-${{ matrix.os }}.exe
        else
          mv ComptaFoldersCreator ComptaFoldersCreator-${{ matrix.name }}-${{ matrix.os }}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ComptaFoldersCreator-${{ matrix.name }}-${{ matrix.os }}
        path: ./publish/${{ matrix.os }}/ComptaFoldersCreator-${{ matrix.name }}-${{ matrix.os }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release assets
      run: |
        mkdir -p ./release-assets
        find ./artifacts -type f -executable -exec cp {} ./release-assets/ \; 2>/dev/null || true
        find ./artifacts -name "*.exe" -exec cp {} ./release-assets/ \;
        find ./artifacts -name "ComptaFoldersCreator-*" -not -name "*.exe" -exec cp {} ./release-assets/ \;
        ls -la ./release-assets
        chmod +x ./release-assets/ComptaFoldersCreator-* 2>/dev/null || true

    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: ComptaFoldersCreator ${{ steps.get_version.outputs.version }}
        body: |
          ## ComptaFoldersCreator ${{ steps.get_version.outputs.version }}
          
          ### 🚀 Nouvelle version de ComptaFoldersCreator !
          
          Application console C# pour créer automatiquement une arborescence de dossiers organisée pour la gestion comptable annuelle.
          
          ### 📥 Téléchargements directs
          
          Téléchargez directement l'exécutable correspondant à votre système d'exploitation :
          
          - **Windows** : `ComptaFoldersCreator-Windows-win-x64.exe`
          - **Linux** : `ComptaFoldersCreator-Linux-linux-x64`
          - **macOS** : `ComptaFoldersCreator-macOS-osx-x64`
          
          ### ✨ Fonctionnalités
          
          - ✅ Création automatique d'une structure de dossiers par année
          - 📁 Organisation par mois (01 à 12)
          - 📋 Sous-dossiers standardisés : Achats, Factures émises, Relevés bancaires
          - 🎨 Interface colorée pour distinguer les résultats
          - 🔍 Détection intelligente des dossiers existants
          
          ### 📋 Prérequis
          
          - **Aucun prérequis** : Les exécutables sont self-contained et incluent le runtime .NET 8
          - Windows, macOS ou Linux
          
          ### 🚀 Utilisation
          
          1. Téléchargez l'exécutable correspondant à votre OS
          2. Sur Linux/macOS, rendez le fichier exécutable : `chmod +x ComptaFoldersCreator-*`
          3. Exécutez directement le fichier
          4. Suivez les instructions à l'écran
          
          ---
          
          **Installation complète** : Aucune installation supplémentaire requise. Téléchargez, exécutez, c'est tout !
        files: ./release-assets/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}