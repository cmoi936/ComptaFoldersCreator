name: Build and Test

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test build for platform
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true
        elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          dotnet publish -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true
        else
          dotnet publish -c Release -r osx-x64 --self-contained true -p:PublishSingleFile=true
        fi
      shell: bash